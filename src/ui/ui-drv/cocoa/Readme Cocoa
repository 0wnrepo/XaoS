2006-10-23 - Andrew Stone (andrew@stone.com)
	- to build for Videator: -DVIDEATOR_SUPPORT
	- added this file
	- added Credits.html
	- modified InfoPlist.strings
	- MainMenu.nib
		- changed NewApplication to XaoS
		- changed window title to indicate this version of XaoS talks to Videator
		
	- AppController.m: added distributed notification with imageRep
	- FractalView.m: added method to return current imageRep
2006-10-25
	- ui_cocoa.m now byte swaps color masks
	
2006-10-26
	- hot keys working
	- tutorial and help working ala carbon

2006-11-29 - J.B. Langston

Committing additional changes submitted 10/30 by Andrew Stone:

	- support for arrow keys
		up/down change zoom speed
		right/left: if cycling - change
			if auto-rotation - change speed of rotation

    - UI -> Performance Mode
        This will turn off the echoing of messages to the screen

    - going from cycle forward and backward no longer toggles cycling off

	- BUG FIX: window now regains key status after after dialog
        
2008-03-14 - J.B. Langston

    - Fixed bug with smooth color modes on PowerPC Macs (filter.h)

2008-03-17 - J.B. Langston

    - Added user formula support using SFFE/libgsl

    - Added support for libpng to Cocoa

    - Added build instructions to Cocoa project

2008-03-18 - J.B. Langston

    - Moved Videator support into separate VideatorProxy class and updated with 
      Andrew's latest changes - UNTESTED

    - Replaced funky bit-swapping code; now use #if __BIG_ENDIAN__ to set color 
      masks correctly
      
    - Removed unnecessary xstdio_osx.c and made executable-relative paths work
      with standard xstdio.c
      
    - Added Enter key equivalent for OK button on custom dialogs
    
    - Added call to resize image when maximizing window
    
    - Added call to terminate app on window close
    
    - Enabled long double support for deeper zooms

    - Added event handling for middle and right mouse buttons
    
    - Added event handling for scroll wheel panning
    
    - Added copyright headers to all files
    
    - Changed [view setNeedsDisplay:YES] to [view display] to draw immediately
      in order to eliminate jerky zooming motion
      
    - Added support to print status text
    
    - Made save and open panels use last selected directory instead of always
      going back to home directory
      
    - Made window regains key status after open/save dialog
    
    - Removed "-Videator Enabled" from titlebar
      
    - Fixes to custom dialogs to correctly display long doubles and allow
      horizontal scrolling instead of wrapping values
      
2008-03-20

    REFACTORING/CLEANUP
    
    - Added autorelease pools to all driver functions, wrapping all controller calls

    - removed autorelease pools from inside controller methods
    
    - Removed Preferences nib, controller, menu item, and associated icons
      (Videator support will be toggled via menu item in UI menu)
    
    - changed driver and function name to cocoa_* instead of osx_*
    
    - Added MACOSX define that can trigger shared functionality for Cocoa/Carbon drivers
    
    - Removed separate fullscreen driver
    
    - Removed wrapper functions from controller; now call view functions directly
    
    - Added functions for driver init and uninit to controller
    
    - Added pragma marks to categorize functions in controller and view
    
    - Moved videator hook to view's drawRect:
    
    - Added wait date to event handling to prevent busy waiting
      
TODO:

* i18n 
    - Automate po/mo file build and packaging
    - Add code to detect default locale and set LANG variable accordingly
    - Add code to set locale directory correctly relative to executable path

* help
    - Create Mac OS X help file conversion script
    - Automate help build and packaging
    - Add Mac OS X help section

* dialogs
    - Hook up choose file button on custom dialogs
    - Add validators to custom dialog fields
    - Change render basename type from to DIALOG_STRING to DIALOG_OFILE 
    
* menus
    - Implement validators to check/uncheck menu items when displayed
    - Implement popup menus
    - Add copy/paste functionality
    
* fullscreen
    - Implement fullscreen code
    - Add menu item to UI menu to toggle fullscreen mode

* driver
    - Add driver initialization code
    - Add driver uninitialization code
    
* cursors
    - Add cursor changing code in cocoa driver
    - Add hook to change cursor during performance mode

* acs features
    - Implement fast palette save/recall
    - Implement autokeys on startup
    - Change Performance Mode to VJ mode
      (performance mode might be confused with performance enhancement)

* videator
    - Add enable/disable menu item
    - Add links to Videator in Mac OS X help section

